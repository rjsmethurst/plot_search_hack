define(["underscore","backbone","react","react-redux","react-dom","./redux/configure-store","./redux/modules/orcid-selector-app","js/widgets/base/base_widget","./containers/orcid-selector-container"],function(e,t,i,n,s,r,o,c,a){var d=t.View.extend({initialize:function(t){e.assign(this,t)},render:function(){return s.render(i.createElement(n.Provider,{store:this.store},i.createElement(a,null)),this.el),this},destroy:function(){s.unmountComponentAtNode(this.el)}});return c.extend({initialize:function(){this.store=r(this),this.view=new d({store:this.store})},activate:function(t){this.setBeeHive(t),this.activateWidget();var i=this.getPubSub(),n=t.hasObject("User")&&t.getObject("User").isOrcidModeOn();this.store.dispatch(o.updateMode(n)),i.subscribe(i.STORAGE_PAPER_UPDATE,e.bind(this.onStoragePaperChange,this)),i.subscribe(i.USER_ANNOUNCEMENT,e.bind(this.onUserAnnouncement,this))},onStoragePaperChange:function(){var e=this.getBeeHive().getObject("AppStorage").getSelectedPapers();this.store.dispatch(o.updateSelected(e))},onUserAnnouncement:function(t,i){e.has(i,"isOrcidModeOn")&&this.store.dispatch(o.updateMode(i.isOrcidModeOn))},fireOrcidEvent:function(e,t){var i=this.getPubSub();i.publish(i.CUSTOM_EVENT,e,t)}})});